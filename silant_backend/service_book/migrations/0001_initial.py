# Generated by Django 5.1.7 on 2025-04-25 19:58

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('account', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Reference',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entity_name', models.CharField(choices=[('model_technique', 'Модель техники'), ('engine_model', 'Модель двигателя'), ('transmission_model', 'Модель трансмиссии'), ('driving_bridge_model', 'Модель ведущего моста'), ('controlled_bridge_model', 'Модель управляемого моста'), ('type_of_service', 'Вид ТО'), ('fault_node', 'Узел отказа'), ('restoration_method', 'Способ восстановления'), ('organization', 'Организация, проводившая ТО')], max_length=255, verbose_name='Название справочника')),
                ('name', models.CharField(max_length=255, verbose_name='Название')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Описание')),
            ],
            options={
                'ordering': ('-entity_name',),
                'unique_together': {('entity_name', 'name')},
            },
        ),
        migrations.CreateModel(
            name='Machine',
            fields=[
                ('serial_number', models.CharField(max_length=255, primary_key=True, serialize=False, unique=True, verbose_name='Зав. № машины')),
                ('engine_serial_number', models.CharField(max_length=255, verbose_name='Зав. № двигателя')),
                ('transmission_serial_number', models.CharField(max_length=255, verbose_name='Зав. № трансмиссии')),
                ('driving_bridge_serial_number', models.CharField(max_length=255, verbose_name='Зав. № ведущего моста')),
                ('controlled_bridge_serial_number', models.CharField(max_length=255, verbose_name='Зав. № управляемого моста')),
                ('supply_contract', models.CharField(blank=True, max_length=255, null=True, verbose_name='Договор поставки №, дата')),
                ('shipment_date', models.DateField(verbose_name='Дата отгрузки с завода')),
                ('recipient', models.CharField(blank=True, max_length=255, null=True, verbose_name='Грузополучатель (конечный потребитель)')),
                ('delivery_address', models.CharField(blank=True, max_length=255, null=True, verbose_name='Адрес поставки (эксплуатации)')),
                ('equipment', models.TextField(blank=True, default='Стандарт', verbose_name='Комплектация (доп. опции)')),
                ('client', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='account.client', verbose_name='Клиент')),
                ('service_company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='account.servicecompany', verbose_name='Сервисная компания')),
                ('controlled_bridge_model', models.ForeignKey(limit_choices_to={'entity_name': 'controlled_bridge_model'}, on_delete=django.db.models.deletion.PROTECT, related_name='machines_controlled_bridge_model', to='service_book.reference', verbose_name='Модель управляемого моста')),
                ('driving_bridge_model', models.ForeignKey(limit_choices_to={'entity_name': 'driving_bridge_model'}, on_delete=django.db.models.deletion.PROTECT, related_name='machines_driving_bridge_model', to='service_book.reference', verbose_name='Модель ведущего моста')),
                ('engine_model', models.ForeignKey(limit_choices_to={'entity_name': 'engine_model'}, on_delete=django.db.models.deletion.PROTECT, related_name='machines_engine_model', to='service_book.reference', verbose_name='Модель двигателя')),
                ('model_technique', models.ForeignKey(limit_choices_to={'entity_name': 'model_technique'}, on_delete=django.db.models.deletion.PROTECT, related_name='machines_model_technique', to='service_book.reference', verbose_name='Модель техники')),
                ('transmission_model', models.ForeignKey(limit_choices_to={'entity_name': 'transmission_model'}, on_delete=django.db.models.deletion.PROTECT, related_name='machines_transmission_model', to='service_book.reference', verbose_name='Модель трансмиссии')),
            ],
            options={
                'ordering': ('-shipment_date',),
            },
        ),
        migrations.CreateModel(
            name='Claim',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('failure_date', models.DateField(verbose_name='Дата отказа')),
                ('mileage', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Наработка, м/час')),
                ('failure_description', models.TextField(verbose_name='Описание отказа')),
                ('spare_parts_used', models.TextField(blank=True, null=True, verbose_name='Используемые запасные части')),
                ('restoration_date', models.DateField(verbose_name='Дата восстановления')),
                ('service_company', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='account.servicecompany', verbose_name='Сервисная компания')),
                ('machine', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='claims', to='service_book.machine', verbose_name='Машина')),
                ('fault_node', models.ForeignKey(limit_choices_to={'entity_name': 'fault_node'}, on_delete=django.db.models.deletion.PROTECT, related_name='claims_fault_node', to='service_book.reference', verbose_name='Узел отказа')),
                ('restoration_method', models.ForeignKey(limit_choices_to={'entity_name': 'restoration_method'}, on_delete=django.db.models.deletion.PROTECT, related_name='claims_restoration_method', to='service_book.reference', verbose_name='Способ восстановления')),
            ],
            options={
                'ordering': ('-failure_date',),
            },
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('service_date', models.DateField(verbose_name='Дата проведения ТО')),
                ('mileage', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Наработка, м/час')),
                ('work_order_number', models.CharField(max_length=255, verbose_name='№ заказ-наряда')),
                ('work_order_date', models.DateField(verbose_name='Дата заказ-наряда')),
                ('machine', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='services', to='service_book.machine', verbose_name='Машина')),
                ('organization', models.ForeignKey(limit_choices_to={'entity_name': 'organization'}, on_delete=django.db.models.deletion.PROTECT, related_name='services_organization', to='service_book.reference', verbose_name='Организация, проводившая ТО')),
                ('service_company', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='account.servicecompany', verbose_name='Сервисная компания')),
                ('type_of_service', models.ForeignKey(limit_choices_to={'entity_name': 'type_of_service'}, on_delete=django.db.models.deletion.PROTECT, related_name='services_type_of_service', to='service_book.reference', verbose_name='Вид ТО')),
            ],
            options={
                'ordering': ('-service_date',),
            },
        ),
    ]
