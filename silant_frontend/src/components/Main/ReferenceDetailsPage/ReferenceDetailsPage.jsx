import React, { useState, useEffect } from 'react';
import { useNavigate } from 'react-router';
import { useParams } from 'react-router';
import EditReference from './EditReference/EditReference.jsx';
import { searchService } from '../../../services/searchService.js';

const ReferenceDetailsPage = () => {
    const [loading, setLoading] = useState(false);
    const [referenceData, setReferenceData] = useState([]);
    const [error, setError] = useState('');
    const [isViewMode, setIsViewMode] = useState(true);
    const [isEditMode, setIsEditMode] = useState(false);
    const { id } = useParams();

    const navigate = useNavigate();

    useEffect(() => {
        const getResult = async () => {
            setLoading(true);
            setError('');
            setReferenceData([]);

            try {
                const response = await searchService.getReference(id);
                setReferenceData(response);
            } catch (error) {
                console.log(error.message);
                setError(error.response?.status === 404 ? '–î–∞–Ω–Ω—ã–µ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã' : '–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞');
            } finally {
                setLoading(false);
            }
        };
        getResult();
    }, []);

    const getEntityDisplayName = (entityName) => {
        const choices = {
            model_technique: '–ú–æ–¥–µ–ª—å —Ç–µ—Ö–Ω–∏–∫–∏',
            engine_model: '–ú–æ–¥–µ–ª—å –¥–≤–∏–≥–∞—Ç–µ–ª—è',
            transmission_model: '–ú–æ–¥–µ–ª—å —Ç—Ä–∞–Ω—Å–º–∏—Å—Å–∏–∏',
            driving_bridge_model: '–ú–æ–¥–µ–ª—å –≤–µ–¥—É—â–µ–≥–æ –º–æ—Å—Ç–∞',
            controlled_bridge_model: '–ú–æ–¥–µ–ª—å —É–ø—Ä–∞–≤–ª—è–µ–º–æ–≥–æ –º–æ—Å—Ç–∞',
            type_of_service: '–í–∏–¥ –¢–û',
            fault_node: '–£–∑–µ–ª –æ—Ç–∫–∞–∑–∞',
            restoration_method: '–°–ø–æ—Å–æ–± –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è',
            organization: '–û—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è, –ø—Ä–æ–≤–æ–¥–∏–≤—à–∞—è –¢–û',
        };
        return choices[entityName] || entityName;
    };

    const handleEdit = () => {
        setIsViewMode(false);
        setIsEditMode(true);
    };

    return (
        <main className="main main__reference-details-page">
            <div className="container">
                <div className="page__container">
                    <div className="sb__container">
                        {loading && <h1 className="sb__text">–ó–∞–≥—Ä—É–∑–∫–∞...</h1>}
                        {error && <h1 className="sb__text">{error}</h1>}
                        {!loading && !error && referenceData?.length == 0 && (
                            <h1 className="sb__text">–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö</h1>
                        )}
                        {referenceData?.length !== 0 ? (
                            <>
                                <section className="sb__header-section">
                                    <div className="sb__header-navbar">
                                        <button
                                            className="sb__header-navbar-btn"
                                            onClick={() => {
                                                navigate('/');
                                            }}
                                        >
                                            ü†î –ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞
                                        </button>
                                    </div>
                                    <div className="sb__header-container">
                                        <div className="sb__header-item">
                                            <div className="sb__header-text">–°–ø—Ä–∞–≤–æ—á–Ω–∏–∫: </div>
                                            <div className="sb__header-value">
                                                {getEntityDisplayName(referenceData.entity_name)}
                                            </div>
                                        </div>
                                    </div>
                                </section>

                                {isViewMode && (
                                    <>
                                        <section className="sb__navbar-section">
                                            <div className="sb__container">
                                                <h1 className="sb__text">
                                                    –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —ç–ª–µ–º–µ–Ω—Ç–µ —Å–ø—Ä–∞–≤–æ—á–Ω–∏–∫–∞
                                                </h1>
                                            </div>
                                            <hr />
                                        </section>

                                        <section className="details-section">
                                            <div className="sb__header-navbar">
                                                <button
                                                    className="sb__header-navbar-btn"
                                                    onClick={handleEdit}
                                                >
                                                    –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å
                                                </button>
                                            </div>
                                            <div className="details__container">
                                                <div className="details__private-container">
                                                    <div className="details__private-item">
                                                        <div className="details__private-title">
                                                            –ù–∞–∑–≤–∞–Ω–∏–µ:{' '}
                                                        </div>
                                                        <div className="details__private-value">
                                                            {referenceData.name}
                                                        </div>
                                                    </div>
                                                </div>

                                                <div className="details__public-container">
                                                    <div className="details__public-item">
                                                        <div className="details__public-item-header">
                                                            <div className="details__public-item-header-text">
                                                                <div className="details__public-item-title">
                                                                    –û–ø–∏—Å–∞–Ω–∏–µ
                                                                </div>
                                                            </div>
                                                        </div>
                                                        <hr />
                                                        <div className="details__public-item-body">
                                                            {referenceData.description}
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        </section>
                                    </>
                                )}
                                {isEditMode && (
                                    <EditReference
                                        setIsViewMode={setIsViewMode}
                                        setIsEditMode={setIsEditMode}
                                    />
                                )}
                            </>
                        ) : null}
                    </div>
                </div>
            </div>
        </main>
    );
};

export default ReferenceDetailsPage;
